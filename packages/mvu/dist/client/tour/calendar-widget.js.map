{
  "version": 3,
  "sources": ["../../../src/client/tour/calendar-widget.ts"],
  "sourcesContent": ["import { css, html, LitElement } from \"lit\";\nimport {\n  customElement,\n  property,\n  state\n} from \"lit/decorators.js\";\n\n@customElement(\"calendar-widget\")\nexport class CalendarWidget extends LitElement {\n  @property({ attribute: \"start-date\", type: Date })\n  startDate: Date = new Date();\n\n  @property({ attribute: \"end-date\", type: Date })\n  endDate: Date = new Date();\n\n  @state()\n  selected: Date | undefined;\n\n  render() {\n    const dates = datesInRange(start, end);\n\n    const renderDate = (d) => {\n      const ymd = {\n        d: d.getUTCDate(),\n        m: d.getUTCMonth() + 1,\n        y: d.getUTCFullYear()\n      };\n\n      const format = ({ y, m, d }) => [y, m, d].join(\"-\");\n\n      return html`\n        <label>\n          ${ymd.d}\n          <input\n            type=\"radio\"\n            name=\"cal\"\n            onchange=\"CalendarWidget.handleSelection(event)\"\n            value=\"${format(ymd)}\" />\n        </label>\n      `;\n    };\n\n    return html` <section>\n      <fieldset id=\"grid\">\n        <h6>Su</h6>\n        <h6>Mo</h6>\n        <h6>Tu</h6>\n        <h6>We</h6>\n        <h6>Th</h6>\n        <h6>Fr</h6>\n        <h6>Sa</h6>\n      </fieldset>\n      <button\n        id=\"clear\"\n        onclick=\"CalendarWidget.handleClearSelection(event)\">\n        Clear Selection\n      </button>\n      ${dates.map(renderDate)}\n    </section>`;\n  }\n\n  static styles = css`\n    :host {\n      grid-area: calendar;\n      padding: 0 var(--size-spacing-medium);\n    }\n\n    fieldset {\n      display: grid;\n      grid-template-columns: repeat(7, 2rem);\n      gap: var(--size-spacing-small);\n      justify-content: center;\n      justify-items: streth;\n      border: 0;\n    }\n\n    h6 {\n      text-align: center;\n    }\n\n    label {\n      position: relative;\n      width: 100%;\n      height: 100%;\n      aspect-ratio: 1;\n      padding: var(--size-spacing-small);\n      white-space: nowrap;\n      text-align: center;\n      color: var(--color-accent);\n      font-family: var(--font-family-display);\n      z-index: 0;\n    }\n\n    input {\n      appearance: none;\n      background: white;\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: -1;\n    }\n\n    input:checked {\n      background: var(--color-accent);\n    }\n\n    label:has(input:checked) {\n      color: var(--color-link-inverted);\n    }\n\n    button {\n      display: block;\n      margin: 0 auto;\n    }\n  `;\n\n  static handleClearSelection = effect(function () {\n    const current =\n      this.shadowRoot.querySelector(\"input:checked\");\n    if (current) {\n      const items = document.querySelectorAll(\n        \".itinerary > itinerary-item\"\n      );\n\n      Array.from(items).forEach((el) => {\n        el.removeAttribute(\"hidden\");\n        el.removeAttribute(\"open\");\n      });\n      current.checked = false;\n    }\n  });\n\n  static handleSelection = effect(function (ev) {\n    const date = new Date(ev.target.value);\n    const items = document.querySelectorAll(\n      \".itinerary > itinerary-item\"\n    );\n    Array.from(items).forEach((el) => {\n      const start = el.getAttribute(\"start-date\");\n      const end = el.getAttribute(\"end-date\") || start;\n      const shown =\n        new Date(start) <= date && date <= new Date(end);\n      if (shown) {\n        el.setAttribute(\"open\", \"open\");\n        el.removeAttribute(\"hidden\");\n      } else {\n        el.setAttribute(\"hidden\", \"hidden\");\n      }\n    });\n  });\n}\n\nif (window) {\n  window.CalendarWidget = CalendarWidget;\n}\n\nfunction datesInRange(start, end) {\n  let result = [];\n  let i = new Date(start);\n\n  while (i <= (end || start)) {\n    result.push(new Date(i));\n    i.setUTCDate(i.getUTCDate() + 1);\n  }\n\n  return result;\n}\n"],
  "mappings": "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",
  "names": ["d", "start", "end"]
}
