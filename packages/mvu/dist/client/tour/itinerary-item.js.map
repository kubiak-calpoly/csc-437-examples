{
  "version": 3,
  "sources": ["../../../src/client/tour/itinerary-item.ts"],
  "sourcesContent": ["import { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"itinerary-item\")\nexport class ItineraryItem extends LitElement {\n  @property({ attribute: \"start-date\" })\n  startDate: Date = new Date();\n\n  @property({ attribute: \"end-date\" })\n  endDate: Date = new Date();\n\n  @property({ attribute: \"item-class\" })\n  itemClass: string = \"transportation\";\n\n  @property()\n  marker: string = \"\";\n\n  @property({ reflect: true })\n  open: boolean = false;\n\n  @property({ reflect: true })\n  hidden: boolean = false;\n\n  render() {\n    return html` <span id=\"dates\">\n        <time datetime=${this.startDate}>\n          ${formatDate(this.startDate)}\n        </time>\n        <time datetime=${this.endDate}>\n          ${formatDate(this.endDate)}\n        </time>\n      </span>\n      <details\n        id=\"details\"\n        name=\"itin\"\n        ${open}\n        ontoggle=\"ItineraryItem.handleToggle(event)\">\n        <summary>\n          <slot name=\"summary\"></slot>\n        </summary>\n        <slot></slot>\n      </details>`;\n  }\n\n  static styles = css`\n    <style > :host {\n      display: contents;\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    #dates {\n      color: var(--color-accent);\n      font-family: var(--font-family-display);\n      font-weight: bold;\n      grid-column: start;\n    }\n    #dates time {\n      white-space: nowrap;\n    }\n    #dates time + time::before {\n      display: inline-block;\n      content: \" \u2013 \";\n    }\n    details {\n      padding: var(--size-spacing-medium);\n      display: contents;\n    }\n    details.destination > summary,\n    details.destination > ::slotted(*) {\n      grid-column: header;\n    }\n    ::slotted(ul) {\n      list-style: none;\n      padding: 0;\n      align-self: end;\n    }\n    summary {\n      position: relative;\n      padding-bottom: var(--size-spacing-large);\n      padding-left: calc(\n        var(--size-icon-large) + var(--size-spacing-medium)\n      );\n      list-style: none;\n      grid-column: header / end;\n      min-height: calc(\n        var(--size-icon-large) + var(--size-spacing-large)\n      );\n    }\n    summary::after {\n      /* SVG icon: blz-expand-down.svg */\n      content: url('data:image/svg+xml;utf8,<svg width=\"64\" height=\"16\" viewBox=\"0 0 64 16\" fill=\"rgb(42 143 43)\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.7539 3L31.5 10L39.2461 3H64V13H0V3H23.7539Z\"/></svg>');\n      display: block;\n      position: absolute;\n      top: var(--size-icon-large);\n      left: 0;\n      height: var(--size-spacing-large);\n      width: var(--size-icon-large);\n    }\n\n    details[open] > summary::after {\n      content: url('data:image/svg+xml;utf8,<svg width=\"64\" height=\"16\" viewBox=\"0 0 64 16\" fill=\"rgb(42 143 43)\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32 5.67712L24.699 12H1V4H63V12H39.301L32 5.67712ZM38.9282 13H64V3H0V13H25.0718L32 7L38.9282 13Z\"/></svg>');\n    }\n  `;\n}\n\n//   static handleToggle = effect(function (event) {\n//     const markerId = this.getAttribute(\"marker\");\n//     const isOpen = event.newState === \"open\";\n//\n//     console.log(\"Toggled\", markerId);\n//     if (markerId) {\n//       const marker = document.getElementById(markerId);\n//\n//       if (marker) {\n//         if (isOpen) marker.setAttribute(\"selected\", \"selected\");\n//         else marker.removeAttribute(\"selected\");\n//       }\n//     }\n//   });\n//\n//   _toggleOpen(value) {\n//     const details = this.shadowRoot.getElementById(\"details\");\n//\n//     if (value) details.setAttribute(\"open\", \"open\");\n//     else details.removeAttribute(\"open\");\n//   }\n//\n//   _toggleHidden(value) {\n//     if (value) this.classList.add(\"is-hidden\");\n//     else this.classList.remove(\"is-hidden\");\n//   }\n\nif (window) {\n  window.ItineraryItem = ItineraryItem;\n}\n\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n\nfunction formatDate(datestring) {\n  const dt = new Date(datestring);\n  const m = months[dt.getUTCMonth()];\n  const d = dt.getUTCDate();\n\n  return `${d} ${m}`;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsC;AACtC,wBAAwC;AAGjC,IAAM,gBAAN,cAA4B,sBAAW;AAAA,EAAvC;AAAA;AAEL,qBAAkB,oBAAI,KAAK;AAG3B,mBAAgB,oBAAI,KAAK;AAGzB,qBAAoB;AAGpB,kBAAiB;AAGjB,gBAAgB;AAGhB,kBAAkB;AAAA;AAAA,EAElB,SAAS;AACP,WAAO;AAAA,yBACc,KAAK,SAAS;AAAA,YAC3B,WAAW,KAAK,SAAS,CAAC;AAAA;AAAA,yBAEb,KAAK,OAAO;AAAA,YACzB,WAAW,KAAK,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAM1B,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOZ;AA8DF;AApGa,cAwCJ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtChB;AAAA,MADC,4BAAS,EAAE,WAAW,aAAa,CAAC;AAAA,GAD1B,cAEX;AAGA;AAAA,MADC,4BAAS,EAAE,WAAW,WAAW,CAAC;AAAA,GAJxB,cAKX;AAGA;AAAA,MADC,4BAAS,EAAE,WAAW,aAAa,CAAC;AAAA,GAP1B,cAQX;AAGA;AAAA,MADC,4BAAS;AAAA,GAVC,cAWX;AAGA;AAAA,MADC,4BAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GAbhB,cAcX;AAGA;AAAA,MADC,4BAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GAhBhB,cAiBX;AAjBW,gBAAN;AAAA,MADN,iCAAc,gBAAgB;AAAA,GAClB;AAiIb,IAAI,QAAQ;AACV,SAAO,gBAAgB;AACzB;AAEA,MAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,SAAS,WAAW,YAAY;AAC9B,QAAM,KAAK,IAAI,KAAK,UAAU;AAC9B,QAAM,IAAI,OAAO,GAAG,YAAY,CAAC;AACjC,QAAM,IAAI,GAAG,WAAW;AAExB,SAAO,GAAG,CAAC,IAAI,CAAC;AAClB;",
  "names": []
}
