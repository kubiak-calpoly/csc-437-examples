{
  "version": 3,
  "sources": ["../../../src/client/tour/tour-page.ts"],
  "sourcesContent": ["import { css, html, LitElement } from \"lit\";\nimport {\n  customElement,\n  property,\n  state\n} from \"lit/decorators.js\";\nimport { provide } from \"@lit/context\";\nimport type {\n  Tour,\n  Destination,\n  Transportation\n} from \"../../models/Tour\";\nimport { Profile } from \"../../models/Profile\";\nimport { reset, elements } from \"../shared/css-base\";\nimport tourContext from \"./tour-context\";\nimport \"../shared/blazing-header\";\nimport \"./itinerary-view\";\nimport \"./calendar-widget\";\nimport \"./map-widget\";\n\n@customElement(\"tour-page\")\nexport class TourPage extends LitElement {\n  @property({ attribute: \"tour-id\" })\n  tourId: string = \"\";\n\n  @provide({ context: tourContext })\n  @state()\n  tour: Tour = {\n    id: \"tour-skeleton\",\n    name: \"Skeleton Tour\",\n    destinations: [],\n    transportation: [],\n    startDate: new Date(),\n    endDate: new Date(),\n    entourage: []\n  } as Tour;\n\n  @state()\n  selectedDate: Date | undefined;\n\n  @state()\n  _selectedDestination: Destination | undefined;\n\n  connectedCallback() {\n    console.log(\"Tour ID:\", this.tourId);\n    super.connectedCallback();\n\n    fetch(`/api/tours/${this.tourId}`)\n      .then((res) => {\n        if (res.status === 200) {\n          res.json().then((json) => {\n            this.tour = json as Tour;\n          });\n        }\n      })\n      .catch((err) =>\n        console.log(\"Error when reading tour\", err)\n      );\n  }\n\n  render() {\n    const {\n      name,\n      startDate,\n      endDate,\n      destinations,\n      transportation\n    } = this.tour;\n\n    const renderMarker = (dst: Destination, i: number) => {\n      return html` <map-marker\n        lat=${dst.location.lat}\n        lon=${dst.location.lon}\n        ?selected=${dst.name ===\n        this._selectedDestination?.name}>\n        ${dst.name}\n      </map-marker>`;\n    };\n\n    return html`\n      <blazing-header title=\"${name}\"> </blazing-header>\n      <main class=\"page\">\n        <calendar-widget\n          .handleChange=${(selected: Date | undefined) =>\n            (this.selectedDate = selected)}\n          start-date=${startDate}\n          end-date=${endDate}>\n        </calendar-widget>\n        <map-widget src=\"/maps/italy.geo.json\">\n          ${destinations.map(renderMarker)}\n        </map-widget>\n        <itinerary-view\n          .selectedDate=${this.selectedDate}\n          .handleDestinationToggle=${(\n            open: boolean,\n            dst: Destination\n          ) =>\n            (this._selectedDestination = open\n              ? dst\n              : undefined)}>\n        </itinerary-view>\n        <entourage-table> </entourage-table>\n      </main>\n    `;\n  }\n\n  static styles = [\n    reset,\n    elements,\n    css`\n      main.page {\n        display: grid;\n        grid-template-columns: var(--size-width-sidebar) auto;\n        grid-template-rows: auto auto 1fr;\n        grid-template-areas:\n          \"calendar  itinerary\"\n          \"map       itinerary\"\n          \"entourage itinerary\";\n      }\n      \n      calendar-widget {\n        grid-area: calendar;\n      }\n      \n      map-widget {\n        grid-area: map;\n      }\n      \n      itinerary-view {\n        grid-area: itinerary;\n      }\n      \n      entourage-table: {\n        grid-area-entourage;\n      }\n    `\n  ];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsC;AACtC,wBAIO;AACP,qBAAwB;AAOxB,sBAAgC;AAChC,0BAAwB;AACxB,4BAAO;AACP,4BAAO;AACP,6BAAO;AACP,wBAAO;AAGA,IAAM,WAAN,cAAuB,sBAAW;AAAA,EAAlC;AAAA;AAEL,kBAAiB;AAIjB,gBAAa;AAAA,MACX,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,cAAc,CAAC;AAAA,MACf,gBAAgB,CAAC;AAAA,MACjB,WAAW,oBAAI,KAAK;AAAA,MACpB,SAAS,oBAAI,KAAK;AAAA,MAClB,WAAW,CAAC;AAAA,IACd;AAAA;AAAA,EAQA,oBAAoB;AAClB,YAAQ,IAAI,YAAY,KAAK,MAAM;AACnC,UAAM,kBAAkB;AAExB,UAAM,cAAc,KAAK,MAAM,EAAE,EAC9B,KAAK,CAAC,QAAQ;AACb,UAAI,IAAI,WAAW,KAAK;AACtB,YAAI,KAAK,EAAE,KAAK,CAAC,SAAS;AACxB,eAAK,OAAO;AAAA,QACd,CAAC;AAAA,MACH;AAAA,IACF,CAAC,EACA;AAAA,MAAM,CAAC,QACN,QAAQ,IAAI,2BAA2B,GAAG;AAAA,IAC5C;AAAA,EACJ;AAAA,EAEA,SAAS;AACP,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AAET,UAAM,eAAe,CAAC,KAAkB,MAAc;AACpD,aAAO;AAAA,cACC,IAAI,SAAS,GAAG;AAAA,cAChB,IAAI,SAAS,GAAG;AAAA,oBACV,IAAI,SAChB,KAAK,sBAAsB,IAAI;AAAA,UAC7B,IAAI,IAAI;AAAA;AAAA,IAEd;AAEA,WAAO;AAAA,+BACoB,IAAI;AAAA;AAAA;AAAA,0BAGT,CAAC,aACd,KAAK,eAAe,QAAS;AAAA,uBACnB,SAAS;AAAA,qBACX,OAAO;AAAA;AAAA;AAAA,YAGhB,aAAa,IAAI,YAAY,CAAC;AAAA;AAAA;AAAA,0BAGhB,KAAK,YAAY;AAAA,qCACN,CACzB,MACA,QAEC,KAAK,uBAAuB,OACzB,MACA,MAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxB;AAiCF;AApHa,SAqFJ,SAAS;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BF;AAjHA;AAAA,MADC,4BAAS,EAAE,WAAW,UAAU,CAAC;AAAA,GADvB,SAEX;AAIA;AAAA,MAFC,wBAAQ,EAAE,SAAS,oBAAAA,QAAY,CAAC;AAAA,MAChC,yBAAM;AAAA,GALI,SAMX;AAWA;AAAA,MADC,yBAAM;AAAA,GAhBI,SAiBX;AAGA;AAAA,MADC,yBAAM;AAAA,GAnBI,SAoBX;AApBW,WAAN;AAAA,MADN,iCAAc,WAAW;AAAA,GACb;",
  "names": ["tourContext"]
}
