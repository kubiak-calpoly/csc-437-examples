{
  "version": 3,
  "sources": ["../../../../src/server/services/mongo/tour.ts"],
  "sourcesContent": ["import { Schema, Model, Document, model } from \"mongoose\";\nimport {\n  Tour,\n  Destination,\n  Endpoint,\n  Segment,\n  Transportation\n} from \"../../../models/Tour\";\nimport { Point } from \"../../../models/Geo\";\n\nconst PointSchema = new Schema<Point>({\n  lat: {\n    type: Number,\n    required: true\n  },\n  lon: {\n    type: Number,\n    required: true\n  }\n});\n\nconst DestinationSchema = new Schema<Destination>({\n  name: {\n    type: String,\n    required: true\n  },\n  featuredImage: {\n    type: String,\n    trim: true\n  },\n  nights: {\n    type: Number,\n    required: true\n  },\n  location: {\n    type: PointSchema\n  }\n});\n\nconst EndpointSchema = new Schema<Endpoint>({\n  station: {\n    type: String,\n    required: true\n  },\n  time: {\n    type: Date,\n    required: true\n  },\n  tzOffset: {\n    type: Number\n  }\n});\n\nconst SegmentSchema = new Schema<Segment>({\n  name: {\n    type: String,\n    required: true\n  },\n  provider: {\n    type: String\n  },\n  departure: {\n    type: EndpointSchema\n  },\n  arrival: {\n    type: EndpointSchema\n  }\n});\n\nconst TransportationSchema = new Schema<Transportation>({\n  type: {\n    type: String,\n    required: true\n  },\n  startDate: {\n    type: Date,\n    required: true\n  },\n  segments: {\n    type: [SegmentSchema]\n  }\n});\n\nconst TourSchema = new Schema<Tour>(\n  {\n    id: {\n      type: String,\n      required: true,\n      trim: true\n    },\n    name: {\n      type: String,\n      required: true,\n      trim: true\n    },\n    startDate: {\n      type: Date,\n      required: true\n    },\n    endDate: {\n      type: Date,\n      required: true\n    },\n    destinations: {\n      type: [DestinationSchema],\n      required: true\n    },\n    transportation: {\n      type: [TransportationSchema],\n      required: true\n    }\n  },\n  { collection: \"tour_data\" }\n);\n\nconst TourModel = model<Tour>(\"Tour\", TourSchema);\n\nexport default TourModel;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+C;AAU/C,MAAM,cAAc,IAAI,uBAAc;AAAA,EACpC,KAAK;AAAA,IACH,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,KAAK;AAAA,IACH,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AACF,CAAC;AAED,MAAM,oBAAoB,IAAI,uBAAoB;AAAA,EAChD,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,EACR;AACF,CAAC;AAED,MAAM,iBAAiB,IAAI,uBAAiB;AAAA,EAC1C,SAAS;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,EACR;AACF,CAAC;AAED,MAAM,gBAAgB,IAAI,uBAAgB;AAAA,EACxC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,EACR;AAAA,EACA,WAAW;AAAA,IACT,MAAM;AAAA,EACR;AAAA,EACA,SAAS;AAAA,IACP,MAAM;AAAA,EACR;AACF,CAAC;AAED,MAAM,uBAAuB,IAAI,uBAAuB;AAAA,EACtD,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,IACT,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACR,MAAM,CAAC,aAAa;AAAA,EACtB;AACF,CAAC;AAED,MAAM,aAAa,IAAI;AAAA,EACrB;AAAA,IACE,IAAI;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,MACV,MAAM;AAAA,IACR;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,MAAM;AAAA,IACR;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,cAAc;AAAA,MACZ,MAAM,CAAC,iBAAiB;AAAA,MACxB,UAAU;AAAA,IACZ;AAAA,IACA,gBAAgB;AAAA,MACd,MAAM,CAAC,oBAAoB;AAAA,MAC3B,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,EAAE,YAAY,YAAY;AAC5B;AAEA,MAAM,gBAAY,uBAAY,QAAQ,UAAU;AAEhD,IAAO,eAAQ;",
  "names": []
}
