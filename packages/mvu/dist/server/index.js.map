{
  "version": 3,
  "sources": ["../../src/server/index.ts"],
  "sourcesContent": ["import express, {\n  NextFunction,\n  Request,\n  Response\n} from \"express\";\n// import \"express-async-errors\";\nimport { Eta } from \"eta\";\nimport { Tour } from \"../models/Tour\";\nimport { Profile } from \"../models/Profile\";\nimport { tour_service, profile_service } from \"./services\";\nimport { connect } from \"./services\";\nimport api from \"./api\";\nimport errorHandler from \"./utils/errorHandler\";\nimport {\n  NotFoundError,\n  InternalError\n} from \"../utils/HTTPError\";\n\nconst app = express();\nconst eta = new Eta({\n  views: \"./views\"\n});\nconst port = process.env.PORT || 3000;\n\n// HTTP error handling\n\n// app.use(errorHandler);\n\n// Static files served\n\n[\n  \"data\",\n  \"icons\",\n  \"js\",\n  \"images\",\n  \"maps\",\n  \"pages\",\n  \"styles\"\n].forEach((dir) =>\n  app.use(`/${dir}`, express.static(`static/${dir}`))\n);\n\n// API served\n\nconnect(\"blazing\");\n\napp.use(\"/api\", api);\n\n// Pages served\n\napp.get(\"/hello/:name\", (req: Request, res: Response) => {\n  const { name } = req.params;\n  res.send(eta.render(\"./hello\", { name }));\n});\n\napp.get(\"/tour/:id\", (req: Request, res: Response) => {\n  const { id } = req.params;\n  tour_service\n    .get(id)\n    .then((data: Tour) => res.send(eta.render(\"./tour\", data)));\n});\n\napp.get(\"/profile/new\", (req: Request, res: Response) => {\n  res.send(\n    eta.render(\"./profile\", {\n      $new: true\n    })\n  );\n});\n\napp.get(\n  \"/profile/show/:id\",\n  (req: Request, res: Response, next: NextFunction) => {\n    const { id } = req.params;\n    profile_service\n      .get(id)\n      .then((data) => {\n        console.log(\n          \"Data for /profile: \",\n          JSON.stringify(data)\n        );\n        res.send(eta.render(\"./profile\", data));\n      })\n      .catch((error) => next(error));\n  }\n);\n\napp.get(\"/profile/edit/:id\", (req: Request, res: Response) => {\n  const { id } = req.params;\n  profile_service.get(id).then((old: Profile) => {\n    res.send(eta.render(\"./profile\", { $edit: true, ...old }));\n  });\n});\n\napp.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}`);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,qBAIO;AAEP,iBAAoB;AAGpB,sBAA8C;AAC9C,IAAAA,mBAAwB;AACxB,iBAAgB;AAOhB,MAAM,UAAM,eAAAC,SAAQ;AACpB,MAAM,MAAM,IAAI,eAAI;AAAA,EAClB,OAAO;AACT,CAAC;AACD,MAAM,OAAO,QAAQ,IAAI,QAAQ;AAQjC;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE;AAAA,EAAQ,CAAC,QACT,IAAI,IAAI,IAAI,GAAG,IAAI,eAAAA,QAAQ,OAAO,UAAU,GAAG,EAAE,CAAC;AACpD;AAAA,IAIA,0BAAQ,SAAS;AAEjB,IAAI,IAAI,QAAQ,WAAAC,OAAG;AAInB,IAAI,IAAI,gBAAgB,CAAC,KAAc,QAAkB;AACvD,QAAM,EAAE,KAAK,IAAI,IAAI;AACrB,MAAI,KAAK,IAAI,OAAO,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC;AAED,IAAI,IAAI,aAAa,CAAC,KAAc,QAAkB;AACpD,QAAM,EAAE,GAAG,IAAI,IAAI;AACnB,+BACG,IAAI,EAAE,EACN,KAAK,CAAC,SAAe,IAAI,KAAK,IAAI,OAAO,UAAU,IAAI,CAAC,CAAC;AAC9D,CAAC;AAED,IAAI,IAAI,gBAAgB,CAAC,KAAc,QAAkB;AACvD,MAAI;AAAA,IACF,IAAI,OAAO,aAAa;AAAA,MACtB,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AACF,CAAC;AAED,IAAI;AAAA,EACF;AAAA,EACA,CAAC,KAAc,KAAe,SAAuB;AACnD,UAAM,EAAE,GAAG,IAAI,IAAI;AACnB,oCACG,IAAI,EAAE,EACN,KAAK,CAAC,SAAS;AACd,cAAQ;AAAA,QACN;AAAA,QACA,KAAK,UAAU,IAAI;AAAA,MACrB;AACA,UAAI,KAAK,IAAI,OAAO,aAAa,IAAI,CAAC;AAAA,IACxC,CAAC,EACA,MAAM,CAAC,UAAU,KAAK,KAAK,CAAC;AAAA,EACjC;AACF;AAEA,IAAI,IAAI,qBAAqB,CAAC,KAAc,QAAkB;AAC5D,QAAM,EAAE,GAAG,IAAI,IAAI;AACnB,kCAAgB,IAAI,EAAE,EAAE,KAAK,CAAC,QAAiB;AAC7C,QAAI,KAAK,IAAI,OAAO,aAAa,EAAE,OAAO,MAAM,GAAG,IAAI,CAAC,CAAC;AAAA,EAC3D,CAAC;AACH,CAAC;AAED,IAAI,OAAO,MAAM,MAAM;AACrB,UAAQ,IAAI,sCAAsC,IAAI,EAAE;AAC1D,CAAC;",
  "names": ["import_services", "express", "api"]
}
