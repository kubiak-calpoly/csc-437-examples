{
  "version": 3,
  "sources": ["../../src/server/index.ts"],
  "sourcesContent": ["import \"express-async-errors\";\nimport express, {\n  NextFunction,\n  Request,\n  Response\n} from \"express\";\nimport ViteExpress from \"vite-express\";\nimport { Eta } from \"eta\";\nimport { Tour } from \"../models/Tour\";\nimport { Profile } from \"../models/Profile\";\nimport { tour_service, profile_service } from \"./services\";\nimport { connect } from \"./services\";\nimport api from \"./api\";\nimport { errorHandler } from \"./utils/errorHandler\";\nimport {\n  NotFoundError,\n  InternalError\n} from \"../utils/HTTPError\";\n\nconst app = express();\nconst eta = new Eta({\n  views: \"./views\"\n});\nconst port = process.env.PORT\n  ? parseInt(process.env.PORT)\n  : 3000;\n\n// Static files served\n\n[\n  \"data\",\n  \"icons\",\n  \"js\",\n  \"images\",\n  \"maps\",\n  \"pages\",\n  \"styles\"\n].forEach((dir) =>\n  app.use(`/${dir}`, express.static(`static/${dir}`))\n);\n\n// API served\n\nconnect(\"blazing\");\n\napp.use(\"/api\", api);\n\n// Pages served\n\napp.get(\"/hello/:name\", (req: Request, res: Response) => {\n  const { name } = req.params;\n  res.send(eta.render(\"./hello\", { name }));\n});\n\napp.get(\n  \"/tour/:id\",\n  (req: Request, res: Response, next: NextFunction) => {\n    const { id } = req.params;\n    tour_service\n      .get(id)\n      .then((data: Tour) =>\n        res.send(eta.render(\"./tour\", data))\n      )\n      .catch((error) => next(error));\n  }\n);\n\napp.get(\"/profile/new\", (req: Request, res: Response) => {\n  res.send(\n    eta.render(\"./profile\", {\n      $new: true\n    })\n  );\n});\n\napp.get(\n  \"/profile/show/:id\",\n  (req: Request, res: Response, next: NextFunction) => {\n    const { id } = req.params;\n    profile_service\n      .get(id)\n      .then((data) => {\n        res.send(eta.render(\"./profile\", data));\n      })\n      .catch((error) => next(error));\n  }\n);\n\napp.get(\"/profile/edit/:id\", (req: Request, res: Response) => {\n  const { id } = req.params;\n  profile_service.get(id).then((old: Profile) => {\n    res.send(eta.render(\"./profile\", { $edit: true, ...old }));\n  });\n});\n\napp.use(\n  (\n    err: Error,\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) => {\n    errorHandler.handleError(err, res, next);\n  }\n);\n\nViteExpress.listen(app, port, () => {\n  console.log(\n    `Vite-Express server running at http://localhost:${port}`\n  );\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAAO;AACP,qBAIO;AACP,0BAAwB;AACxB,iBAAoB;AAGpB,sBAA8C;AAC9C,IAAAA,mBAAwB;AACxB,iBAAgB;AAChB,0BAA6B;AAM7B,MAAM,UAAM,eAAAC,SAAQ;AACpB,MAAM,MAAM,IAAI,eAAI;AAAA,EAClB,OAAO;AACT,CAAC;AACD,MAAM,OAAO,QAAQ,IAAI,OACrB,SAAS,QAAQ,IAAI,IAAI,IACzB;AAIJ;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE;AAAA,EAAQ,CAAC,QACT,IAAI,IAAI,IAAI,GAAG,IAAI,eAAAA,QAAQ,OAAO,UAAU,GAAG,EAAE,CAAC;AACpD;AAAA,IAIA,0BAAQ,SAAS;AAEjB,IAAI,IAAI,QAAQ,WAAAC,OAAG;AAInB,IAAI,IAAI,gBAAgB,CAAC,KAAc,QAAkB;AACvD,QAAM,EAAE,KAAK,IAAI,IAAI;AACrB,MAAI,KAAK,IAAI,OAAO,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC;AAED,IAAI;AAAA,EACF;AAAA,EACA,CAAC,KAAc,KAAe,SAAuB;AACnD,UAAM,EAAE,GAAG,IAAI,IAAI;AACnB,iCACG,IAAI,EAAE,EACN;AAAA,MAAK,CAAC,SACL,IAAI,KAAK,IAAI,OAAO,UAAU,IAAI,CAAC;AAAA,IACrC,EACC,MAAM,CAAC,UAAU,KAAK,KAAK,CAAC;AAAA,EACjC;AACF;AAEA,IAAI,IAAI,gBAAgB,CAAC,KAAc,QAAkB;AACvD,MAAI;AAAA,IACF,IAAI,OAAO,aAAa;AAAA,MACtB,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AACF,CAAC;AAED,IAAI;AAAA,EACF;AAAA,EACA,CAAC,KAAc,KAAe,SAAuB;AACnD,UAAM,EAAE,GAAG,IAAI,IAAI;AACnB,oCACG,IAAI,EAAE,EACN,KAAK,CAAC,SAAS;AACd,UAAI,KAAK,IAAI,OAAO,aAAa,IAAI,CAAC;AAAA,IACxC,CAAC,EACA,MAAM,CAAC,UAAU,KAAK,KAAK,CAAC;AAAA,EACjC;AACF;AAEA,IAAI,IAAI,qBAAqB,CAAC,KAAc,QAAkB;AAC5D,QAAM,EAAE,GAAG,IAAI,IAAI;AACnB,kCAAgB,IAAI,EAAE,EAAE,KAAK,CAAC,QAAiB;AAC7C,QAAI,KAAK,IAAI,OAAO,aAAa,EAAE,OAAO,MAAM,GAAG,IAAI,CAAC,CAAC;AAAA,EAC3D,CAAC;AACH,CAAC;AAED,IAAI;AAAA,EACF,CACE,KACA,KACA,KACA,SACG;AACH,qCAAa,YAAY,KAAK,KAAK,IAAI;AAAA,EACzC;AACF;AAEA,oBAAAC,QAAY,OAAO,KAAK,MAAM,MAAM;AAClC,UAAQ;AAAA,IACN,mDAAmD,IAAI;AAAA,EACzD;AACF,CAAC;",
  "names": ["import_services", "express", "api", "ViteExpress"]
}
