{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import express, { Request, Response } from \"express\";\nimport { Eta } from \"eta\";\nimport { Tour } from \"./models/Tour\";\nimport { Profile } from \"./models/Profile\";\nimport tours from \"./services/tours\";\nimport profiles from \"./services/profiles\";\nimport { connect } from \"./services\";\nimport {\n  basicAuth,\n  authenticatedUser\n} from \"./auth/basic-auth\";\nimport api from \"./api\";\n\nconst app = express();\nconst eta = new Eta({\n  views: \"./views\"\n});\nconst port = process.env.PORT || 3000;\n\n[\n  \"data\",\n  \"icons\",\n  \"js\",\n  \"images\",\n  \"maps\",\n  \"pages\",\n  \"styles\"\n].forEach((dir) =>\n  app.use(`/${dir}`, express.static(`static/${dir}`))\n);\n\nconnect(\"blazing\");\n\napp.use(\"/api\", api);\n\napp.get(\"/hello/:name\", (req: Request, res: Response) => {\n  const { name } = req.params;\n  res.send(eta.render(\"./hello\", { name }));\n});\n\napp.get(\"/tour/:id\", (req: Request, res: Response) => {\n  const { id } = req.params;\n  tours\n    .get(id)\n    .then((data: Tour) => res.send(eta.render(\"./tour\", data)));\n});\n\napp.get(\n  \"/profile/new\",\n  basicAuth,\n  (req: Request, res: Response) => {\n    res.send(\n      eta.render(\"./profile\", {\n        $new: true,\n        $user: authenticatedUser(req)\n      })\n    );\n  }\n);\n\napp.get(\n  \"/profile/show/:id\",\n  basicAuth,\n  (req: Request, res: Response) => {\n    const { id } = req.params;\n    profiles.get(id).then((data: Profile) => {\n      console.log(\"Data for /profile: \", JSON.stringify(data));\n      res.send(eta.render(\"./profile\", data));\n    });\n  }\n);\n\napp.get(\n  \"/profile/edit/:id\",\n  basicAuth,\n  (req: Request, res: Response) => {\n    const { id } = req.params;\n    profiles.get(id).then((old: Profile) => {\n      res.send(\n        eta.render(\"./profile\", { $edit: true, ...old })\n      );\n    });\n  }\n);\n\napp.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}`);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,qBAA2C;AAC3C,iBAAoB;AAGpB,mBAAkB;AAClB,sBAAqB;AACrB,sBAAwB;AACxB,wBAGO;AACP,iBAAgB;AAEhB,MAAM,UAAM,eAAAA,SAAQ;AACpB,MAAM,MAAM,IAAI,eAAI;AAAA,EAClB,OAAO;AACT,CAAC;AACD,MAAM,OAAO,QAAQ,IAAI,QAAQ;AAEjC;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE;AAAA,EAAQ,CAAC,QACT,IAAI,IAAI,IAAI,GAAG,IAAI,eAAAA,QAAQ,OAAO,UAAU,GAAG,EAAE,CAAC;AACpD;AAAA,IAEA,yBAAQ,SAAS;AAEjB,IAAI,IAAI,QAAQ,WAAAC,OAAG;AAEnB,IAAI,IAAI,gBAAgB,CAAC,KAAc,QAAkB;AACvD,QAAM,EAAE,KAAK,IAAI,IAAI;AACrB,MAAI,KAAK,IAAI,OAAO,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC;AAED,IAAI,IAAI,aAAa,CAAC,KAAc,QAAkB;AACpD,QAAM,EAAE,GAAG,IAAI,IAAI;AACnB,eAAAC,QACG,IAAI,EAAE,EACN,KAAK,CAAC,SAAe,IAAI,KAAK,IAAI,OAAO,UAAU,IAAI,CAAC,CAAC;AAC9D,CAAC;AAED,IAAI;AAAA,EACF;AAAA,EACA;AAAA,EACA,CAAC,KAAc,QAAkB;AAC/B,QAAI;AAAA,MACF,IAAI,OAAO,aAAa;AAAA,QACtB,MAAM;AAAA,QACN,WAAO,qCAAkB,GAAG;AAAA,MAC9B,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAEA,IAAI;AAAA,EACF;AAAA,EACA;AAAA,EACA,CAAC,KAAc,QAAkB;AAC/B,UAAM,EAAE,GAAG,IAAI,IAAI;AACnB,oBAAAC,QAAS,IAAI,EAAE,EAAE,KAAK,CAAC,SAAkB;AACvC,cAAQ,IAAI,uBAAuB,KAAK,UAAU,IAAI,CAAC;AACvD,UAAI,KAAK,IAAI,OAAO,aAAa,IAAI,CAAC;AAAA,IACxC,CAAC;AAAA,EACH;AACF;AAEA,IAAI;AAAA,EACF;AAAA,EACA;AAAA,EACA,CAAC,KAAc,QAAkB;AAC/B,UAAM,EAAE,GAAG,IAAI,IAAI;AACnB,oBAAAA,QAAS,IAAI,EAAE,EAAE,KAAK,CAAC,QAAiB;AACtC,UAAI;AAAA,QACF,IAAI,OAAO,aAAa,EAAE,OAAO,MAAM,GAAG,IAAI,CAAC;AAAA,MACjD;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,IAAI,OAAO,MAAM,MAAM;AACrB,UAAQ,IAAI,sCAAsC,IAAI,EAAE;AAC1D,CAAC;",
  "names": ["express", "api", "tours", "profiles"]
}
