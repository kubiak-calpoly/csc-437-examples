{
  "version": 3,
  "sources": ["../../src/auth/credentials.ts"],
  "sourcesContent": ["import bcrypt from \"bcryptjs\";\nimport { Request, Response } from \"express\";\nimport credentials from \"../services/credentials\";\n\nexport function registerUser(req: Request, res: Response) {\n  const { username, pwd } = req.body; // from form\n\n  if (!username || !pwd) {\n    res.status(400).send(\"Bad request: Invalid input data.\");\n  } else {\n    credentials.checkExists(username).then((exists) => {\n      if (exists)\n        res.status(409).send(\"Username already taken\");\n      else {\n        bcrypt\n          .genSalt(10)\n          .then((salt) => bcrypt.hash(pwd, salt))\n          .then((hashedPassword) => {\n            credentials.create(username, hashedPassword);\n          });\n      }\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmB;AAEnB,yBAAwB;AAEjB,SAAS,aAAa,KAAc,KAAe;AACxD,QAAM,EAAE,UAAU,IAAI,IAAI,IAAI;AAE9B,MAAI,CAAC,YAAY,CAAC,KAAK;AACrB,QAAI,OAAO,GAAG,EAAE,KAAK,kCAAkC;AAAA,EACzD,OAAO;AACL,uBAAAA,QAAY,YAAY,QAAQ,EAAE,KAAK,CAAC,WAAW;AACjD,UAAI;AACF,YAAI,OAAO,GAAG,EAAE,KAAK,wBAAwB;AAAA,WAC1C;AACH,wBAAAC,QACG,QAAQ,EAAE,EACV,KAAK,CAAC,SAAS,gBAAAA,QAAO,KAAK,KAAK,IAAI,CAAC,EACrC,KAAK,CAAC,mBAAmB;AACxB,6BAAAD,QAAY,OAAO,UAAU,cAAc;AAAA,QAC7C,CAAC;AAAA,MACL;AAAA,IACF,CAAC;AAAA,EACH;AACF;",
  "names": ["credentials", "bcrypt"]
}
